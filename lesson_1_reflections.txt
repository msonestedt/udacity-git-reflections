How did viewing a diff between two versions of a file help you see the bug that
was introduced?
It took less time since I didn't need too look at every character of every line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
When bugs appear, go back to previous working file. Try out different scenarios
without loosing previous job if it doesn't work.

 What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?
 Pros: Don't get cluttered commit tree, compilable code
 Cons: Forget, too big commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
They are intended for different purposes.

How can you use the commands git log and git diff to view the history of files?
git log lists the different commits with author, commit id and change comment
Using the ids from the git log command the git diff ID1 ID2 command will show
the differences between the two commits

How might using version control make you more confident to make changes that
could break something?
It doesn't really matter if it "breaks" because you can always go back to a
previous working version.

Now that you have your workspace set up, what do you want to try using Git for?
Learn to be a programmer and develop Android apps to start. 
